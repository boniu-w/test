<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>io.github.boniu-w</groupId>
    <artifactId>oldversion-05242023</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>oldversion-05242023</name>
    <description>my demo project for Spring Boot</description>

    <!-- 作者   -->
    <developers>
        <developer>
            <name>boniu</name>
            <email>boniu-w@Live.cn</email>
            <url>https://github.com/boniu-w</url>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <!-- 开源协议   -->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- Software configuration management   -->
    <scm>
        <tag>master</tag>
        <connection>scm:git:git@github.com:boniu-w/test.git</connection>
        <url>git@github.com:boniu-w/test.git</url>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>

        <!--<repository>-->
        <!--    <id>test-wg</id>-->
        <!--    <name>wgstest</name>-->
        <!--    <url>file://${project.basedir}/maven-repo-wg</url>-->
        <!--</repository>-->
    </distributionManagement>

    <properties>
        <java.version>1.8</java.version>
        <mybatis.generator.version>1.3.7</mybatis.generator.version>
        <gpg.skip>false</gpg.skip>
        <javadoc.skip>false</javadoc.skip>
        <springloaded.version>1.2.5.RELEASE</springloaded.version>
        <mahout.version>0.9</mahout.version>
        <protoc.version>3.19.2</protoc.version>
        <grpc.version>1.47.0</grpc.version><!-- CURRENT_GRPC_VERSION -->
        <openapi.generator.version>5.1.0</openapi.generator.version>
        <openapi.package>com.openapi</openapi.package>
        <spring.boot.version>2.1.3.RELEASE</spring.boot.version>
    </properties>

    <dependencies>
        <!--Spring Boot Admin Server监控服务端-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.9.2</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.25</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.3</version>
        </dependency>

        <!--        druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.1.17</version>
        </dependency>

        <!--        spring core -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>5.1.5.RELEASE</version>
        </dependency>

        <!--        neo4j -->
        <!--<dependency>-->
        <!--    <groupId>org.neo4j</groupId>-->
        <!--    <artifactId>neo4j</artifactId>-->
        <!--    <version>3.3.5</version>-->
        <!--</dependency>-->

        <!--        neo4j driver -->
        <!--<dependency>-->
        <!--    <groupId>org.neo4j.driver</groupId>-->
        <!--    <artifactId>neo4j-java-driver</artifactId>-->
        <!--    <version>1.4.4</version>-->
        <!--</dependency>-->

        <!--安全模块-->
        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
        <!--<dependency>-->
        <!--    <groupId>org.springframework.security</groupId>-->
        <!--    <artifactId>spring-security-core</artifactId>-->
        <!--    <version>5.1.4.RELEASE</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--    <groupId>org.springframework.security</groupId>-->
        <!--    <artifactId>spring-security-web</artifactId>-->
        <!--    <version>5.1.4.RELEASE</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--    <groupId>org.springframework.security</groupId>-->
        <!--    <artifactId>spring-security-config</artifactId>-->
        <!--    <version>5.1.4.RELEASE</version>-->
        <!--</dependency>-->

        <!--        fast json -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.75</version>
        </dependency>

        <!--&lt;!&ndash;        swagger &ndash;&gt;-->
        <!--<dependency>-->
        <!--    <groupId>io.swagger</groupId>-->
        <!--    <artifactId>swagger-annotations</artifactId>-->
        <!--    <version>1.5.22</version>-->
        <!--</dependency>-->

        <!-- openapi 相关 -> 经测试 此版本有bug 不能用 ↓↓-->
        <!-- https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter -->
        <!--<dependency>-->
        <!--    <groupId>io.springfox</groupId>-->
        <!--    <artifactId>springfox-boot-starter</artifactId>-->
        <!--    <version>3.0.0</version>-->
        <!--    <exclusions>-->
        <!--        <exclusion>-->
        <!--            <groupId>org.springframework.plugin</groupId>-->
        <!--            <artifactId>spring-plugin-core</artifactId>-->
        <!--        </exclusion>-->
        <!--    </exclusions>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--    <groupId>org.springframework.plugin</groupId>-->
        <!--    <artifactId>spring-plugin-core</artifactId>-->
        <!--    <version>2.0.0.RELEASE</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--    <groupId>org.openapitools</groupId>-->
        <!--    <artifactId>jackson-databind-nullable</artifactId>-->
        <!--    <version>0.2.1</version>-->
        <!--</dependency>-->
        <!-- openapi 相关 ↑↑-->

        <!-- Swagger 依赖包 -->
        <!--<dependency>-->
        <!--    <groupId>io.springfox</groupId>-->
        <!--    <artifactId>springfox-swagger2</artifactId>-->
        <!--    <version>2.9.2</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--    <groupId>io.springfox</groupId>-->
        <!--    <artifactId>springfox-swagger-ui</artifactId>-->
        <!--    <version>2.9.2</version>-->
        <!--</dependency>-->
        <!-- Swagger end -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>5.1.8</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>2.1.5.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.7.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.9</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.9</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.0</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>com.wg.lib</groupId>-->
        <!--            <artifactId>lib</artifactId>-->
        <!--            <version>1.0</version>-->
        <!--            <scope>system</scope>-->
        <!--            <systemPath>${project.basedir}/lib/jzsso.ticketFilter-1.4.8.jar</systemPath>-->
        <!--        </dependency>-->

        <!-- freemarker  -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.29</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- 农历-->
        <dependency>
            <groupId>cn.6tail</groupId>
            <artifactId>lunar</artifactId>
            <version>1.2.28</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba.nacos/nacos-client -->
        <!--<dependency>-->
        <!--    <groupId>com.alibaba.nacos</groupId>-->
        <!--    <artifactId>nacos-client</artifactId>-->
        <!--    <version>1.4.1</version>-->
        <!--</dependency>-->

        <!-- https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config -->
        <!--<dependency>-->
        <!--    <groupId>com.alibaba.cloud</groupId>-->
        <!--    <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>-->
        <!--    <version>2.1.2.RELEASE</version>-->
        <!--</dependency>-->

        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-core -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>5.7.17</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.0.M3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
        <!--解析HTML-->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.14.3</version>
        </dependency>

        <!--<dependency>-->
        <!--    <groupId>com.google.code.gson</groupId>-->
        <!--    <artifactId>gson</artifactId>-->
        <!--    <version>2.2.4</version>-->
        <!--</dependency>-->

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
        </dependency>

        <dependency>
            <groupId>org.apache.mahout</groupId>
            <artifactId>mahout-core</artifactId>
            <version>${mahout.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.mahout</groupId>
            <artifactId>mahout-integration</artifactId>
            <version>${mahout.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.cassandra</groupId>
                    <artifactId>cassandra-all</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>me.prettyprint</groupId>
                    <artifactId>hector-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--bitmap-->
        <!-- https://mvnrepository.com/artifact/com.googlecode.javaewah/JavaEWAH -->
        <dependency>
            <groupId>com.googlecode.javaewah</groupId>
            <artifactId>JavaEWAH</artifactId>
            <version>1.1.6</version>
        </dependency>

        <!--↓↓ grpc -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>1.47.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>1.47.0</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>1.47.0</version>
        </dependency>
        <dependency> <!-- necessary for Java 9+ -->
            <groupId>org.apache.tomcat</groupId>
            <artifactId>annotations-api</artifactId>
            <version>6.0.53</version>
            <scope>provided</scope>
        </dependency>
        <!--↑↑ grpc -->

        <!-- ip -->
        <dependency>
            <groupId>org.lionsoul</groupId>
            <artifactId>ip2region</artifactId>
            <version>2.6.5</version>
        </dependency>

        <!-- oshi-core 主机监控 -->
        <dependency>
            <groupId>com.github.oshi</groupId>
            <artifactId>oshi-core</artifactId>
            <version>3.9.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.sun.jna/jna -->
        <!--<dependency>-->
        <!--    <groupId>com.sun.jna</groupId>-->
        <!--    <artifactId>jna</artifactId>-->
        <!--    <version>3.0.9</version>-->
        <!--</dependency>-->

        <!-- 汉语拼音 -->
        <!-- https://mvnrepository.com/artifact/com.belerweb/pinyin4j -->
        <dependency>
            <groupId>com.belerweb</groupId>
            <artifactId>pinyin4j</artifactId>
            <version>2.5.1</version>
        </dependency>

        <!-- sentinel 流量控制 -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-core</artifactId>
            <version>1.8.6</version>
        </dependency>

        <!--<dependency>-->
        <!--    <groupId>org.springframework.boot</groupId>-->
        <!--    <artifactId>spring-boot-starter-cache</artifactId>-->
        <!--    <version>${spring.boot.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>${caffeine.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.velocity/velocity -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.13.1</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.13.0</version>
        </dependency>

    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>

        <plugins>
            <!--<plugin>-->
            <!--    &lt;!&ndash; Build an executable JAR &ndash;&gt;-->
            <!--    <groupId>org.apache.maven.plugins</groupId>-->
            <!--    <artifactId>maven-jar-plugin</artifactId>-->
            <!--    <version>3.1.0</version>-->
            <!--    <configuration>-->
            <!--        <archive>-->
            <!--            <manifest>-->
            <!--                <addClasspath>true</addClasspath>-->
            <!--                <classpathPrefix>lib/</classpathPrefix>-->
            <!--                <mainClass>wg.application.TestApplication</mainClass>-->
            <!--            </manifest>-->
            <!--        </archive>-->
            <!--    </configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.4.1</version>

                <!-- includeSystemScope 代表maven打包时会将外部引入的jar包（比如在根目录下或resource文件下新加外部jar包）打包到项目jar，在服务器上项目才能运行，不加此配置，本地可以运行，因为本地可以再lib下找到外部包，但是服务器上jar中是没有的。-->
                <!-- 项目上线时要打开 -->
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>

                <!--<dependencies>-->
                <!--    <dependency>-->
                <!--        <groupId>org.springframework</groupId>-->
                <!--        <artifactId>springloaded</artifactId>-->
                <!--        <version>${springloaded.version}</version>-->
                <!--    </dependency>-->
                <!--</dependencies>-->
            </plugin>

            <!-- doc 插件, 非必须 -->
            <!--<plugin>-->
            <!--    <groupId>org.apache.maven.plugins</groupId>-->
            <!--    <artifactId>maven-javadoc-plugin</artifactId>-->
            <!--    <version>3.0.1</version>-->
            <!--    <executions>-->
            <!--        <execution>-->
            <!--            <id>attach-javadocs</id>-->
            <!--            <goals>-->
            <!--                <goal>jar</goal>-->
            <!--            </goals>-->
            <!--        </execution>-->
            <!--    </executions>-->
            <!--</plugin>-->

            <!-- 源码包插件, 非必须 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <attach>true</attach>
                </configuration>
            </plugin>

            <!-- Nexus Staging Maven 插件是将组件部署到 OSSRH 并将它们发布到中央存储库的推荐方法。要配置它，只需将插件添加到您的 Maven pom.xml-->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>

            <!-- gpg 插件, Maven GPG 插件用于对具有以下配置的组件进行签名-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>${mybatis.generator.version}</version>
                <configuration>
                    <configurationFile>${basedir}/src/main/resources/generator/generatorConfig.xml</configurationFile>
                    <overwrite>true</overwrite>
                    <verbose>true</verbose>
                </configuration>
                <dependencies>
                    <!--<dependency>-->
                    <!--    <groupId>org.mybatis</groupId>-->
                    <!--    <artifactId>mybatis</artifactId>-->
                    <!--    <version>3.4.6</version>-->
                    <!--</dependency>-->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!--                    <compilerArgs>&#45;&#45;enable-preview</compilerArgs>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <includes>
                        <include>**/bvt/**/*.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!--↓↓ proto 插件-->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:3.19.2:exe:${os.detected.classifier}</protocArtifact>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.47.0:exe:${os.detected.classifier}</pluginArtifact>
                    <pluginId>grpc-java</pluginId>
                    <protoSourceRoot>src/main/resources/proto/</protoSourceRoot>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--↑↑ proto 插件-->

            <!-- openapi 插件 -->
            <!--<plugin>-->
            <!--    <groupId>org.openapitools</groupId>-->
            <!--    <artifactId>openapi-generator-maven-plugin</artifactId>-->
            <!--    <version>${openapi.generator.version}</version>-->
            <!--    <executions>-->
            <!--        <execution>-->
            <!--            <id>open</id>-->
            <!--            <goals>-->
            <!--                <goal>generate</goal>-->
            <!--            </goals>-->
            <!--            <configuration>-->
            <!--                &lt;!&ndash; API specifications should be split to multiple YML files, when the feature is implemented:-->
            <!--                    https://github.com/OpenAPITools/openapi-generator/issues/6379 &ndash;&gt;-->
            <!--                &lt;!&ndash;//api定义的yml文件所在&ndash;&gt;-->
            <!--                <inputSpec>${project.basedir}/src/main/resources/openapi.yaml</inputSpec>-->
            <!--                <generatorName>spring</generatorName>-->
            <!--                <apiPackage>${openapi.package}.open.controller</apiPackage>-->
            <!--                <modelPackage>${openapi.package}.open.controller.model</modelPackage>-->
            <!--                <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>-->
            <!--                <modelNamePrefix>Open</modelNamePrefix>-->
            <!--                &lt;!&ndash;//如果api定义为 /users 或者 /oders 那么这里要加上对于的路径 order 否则无法生成对应的api接口&ndash;&gt;-->
            <!--                <apisToGenerate>users</apisToGenerate>-->
            <!--                <configOptions>-->
            <!--                    <delegatePattern>true</delegatePattern>-->
            <!--                </configOptions>-->
            <!--            </configuration>-->
            <!--        </execution>-->
            <!--    </executions>-->
            <!--</plugin>-->

        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 下面这个 targetpath 会导致 idea 读不到 配置文件, 但是 如果使用 java -java 运行, 就没事-->
                <!--<targetPath>BOOT-INF/classes/</targetPath>-->
            </resource>

            <!--因为默认java包即源码包下面的xml文件不会被编译，如果想要编译加上如下代码-->
            <resource>
                <directory>src/main/java</directory>
                <!-- 下面这个 targetpath 会导致 idea 读不到 配置文件, 但是 如果使用 java -java 运行, 就没事-->
                <!--<targetPath>BOOT-INF/classes/</targetPath>-->
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                    <include>**/*.json</include>
                </includes>
            </resource>

            <!-- 打包时太慢, 不用了 -->
            <!--<resource>-->
            <!--    <directory>lib</directory>-->
            <!--    <targetPath>BOOT-INF/lib/</targetPath>-->
            <!--    <includes>-->
            <!--        <include>**/*.jar</include>-->
            <!--    </includes>-->
            <!--    &lt;!&ndash; jar 包冲突了, 排除这个包  &ndash;&gt;-->
            <!--    <excludes>-->
            <!--        <exclude>**/fastjson-1.2.2.jar</exclude>-->
            <!--    </excludes>-->
            <!--</resource>-->
        </resources>

    </build>

</project>