#openapi: 3.0.3
#info:
#  title: SpringBoot Open APIs
#  description: SpringBoot Open APIs
#  version: 1.0.0-SNAPSHOT
#externalDocs:
#  description: Check the source code here
#  url: https://gitee.com/xxx/spring-boot-integrate
#servers:
#  - url: https://localhost:33333/wg/
#    description: LOCAL Environment
#    variables:
#      env:
#        default: dev
#        enum:
#          - dev    # DEVELOPMENT ENVIRONMENT
#          - gamma  # GAMMA ENVIRONMENT
#  - url: http://localhost:8080/v1
#    description: applicationion Environment URL
#
#paths:
#  /users:
#    get:
#      summary: '检索用户'
#      description: '检索帐号下所有用户信息'
#      operationId: ListUsers
#      parameters:
#        - $ref: '#/components/parameters/IndexParam'
#        - $ref: '#/components/parameters/LimitParam'
#        - name: name
#          description: '用户名'
#          in: query
#          schema:
#            type: string
#            minLength: 2
#            maxLength: 255
#        - name: keyword
#          description: '模糊搜索'
#          in: query
#          schema:
#            type: string
#      responses:
#        '200':
#          description: '用户列表'
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/UserList'
#        '500':
#          $ref: '#/components/responses/Fault'
#        default:
#          $ref: '#/components/responses/Error'
#    post:
#      summary: '添加用户'
#      description: '添加用户信息'
#      operationId: CreateUser
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/CreateUserRequest'
#      responses:
#        '201':
#          description: '创建用户成功'
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/User'
#        '500':
#          $ref: '#/components/responses/Fault'
#        default:
#          $ref: '#/components/responses/Error'
#  /users/{id}:
#    delete:
#      summary: '删除用户'
#      description: '删除用户信息'
#      operationId: DeleteUser
#      parameters:
#        - name: id
#          in: path
#          schema:
#            type: string
#          required: true
#      responses:
#        '200':
#          description: '删除用户成功'
#        '500':
#          $ref: '#/components/responses/Fault'
#        default:
#          $ref: '#/components/responses/Error'
#    put:
#      summary: '更新用户'
#      description: '更新用户信息'
#      operationId: UpateUser
#      parameters:
#        - name: id
#          in: path
#          schema:
#            type: string
#          required: true
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/UpateUserRequest'
#      responses:
#        '200':
#          description: '更新用户成功'
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/User'
#        '500':
#          $ref: '#/components/responses/Fault'
#        default:
#          $ref: '#/components/responses/Error'
#components:
#  securitySchemes:
#    ApiKeyAuth: # arbitrary name for the security scheme
#      type: apiKey
#      name: Authorization   # name of the header, query parameter or cookie
#      in: header                  # can be "header", "query" or "cookie"
#  schemas:
#    UpateUserRequest:
#      type: object
#      properties:
#        name:
#          description: '用户的名称'
#          type: string
#          minLength: 2
#          maxLength: 64
#        remark:
#          description: '用户备注'
#          type: string
#    CreateUserRequest:
#      type: object
#      properties:
#        name:
#          description: '用户的名称'
#          type: string
#          minLength: 2
#          maxLength: 64
#        remark:
#          description: '用户备注'
#          type: string
#    UserList:
#      description: '用户列表'
#      type: object
#      properties:
#        users:
#          description: '用户列表'
#          type: array
#          items:
#            $ref: '#/components/schemas/User'
#        pagination:
#          $ref: '#/components/schemas/Pagination'
#    User:
#      description: '用户'
#      type: object
#      properties:
#        id:
#          description: '用户的唯一标识'
#          type: string
#        name:
#          description: '用户的名称'
#          type: string
#          minLength: 2
#          maxLength: 64
#        remark:
#          description: '用户备注'
#          type: string
#    Pagination:
#      description: '分页'
#      type: object
#      properties:
#        index:
#          type: integer
#          description: '当前页'
#        limit:
#          type: integer
#          description: '每页数量'
#        total:
#          type: integer
#          format: int64
#          description: '总数'
#    Error:
#      type: object
#      properties:
#        error:
#          allOf:
#            - $ref: '#/components/schemas/ErrorBody'
#            - type: object
#              properties:
#                details:
#                  type: array
#                  items:
#                    $ref: '#/components/schemas/ErrorBody'
#      required: [ error ]
#    Fault:
#      type: object
#      properties:
#        fault:
#          type: object
#          properties:
#            code:
#              type: string
#              default: "InternalFault"
#            message:
#              type: string
#              default: "服务内部错误, 请联系管理员"
#    ErrorBody:
#      type: object
#      properties:
#        code:
#          type: string
#        id:
#          type: string
#        message:
#          type: string
#        target:
#          type: string
#      required: [ code, id, message ]
#  parameters:
#    IndexParam:
#      name: index
#      in: query
#      description: "当前页"
#      schema:
#        type: integer
#        minimum: 1
#        default: 1
#    LimitParam:
#      name: limit
#      in: query
#      description: "每页数量"
#      schema:
#        type: integer
#        default: 10
